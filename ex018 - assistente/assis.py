import speech_recognition as sr
import pyttsx3
import datetime
import webbrowser
import requests
import pyautogui
import time

voz = pyttsx3.init()
voz.setProperty('rate', 180)
voz.setProperty('voice', 'brazil')

def falar(mensagem):
    print("üü¢ Assistente:", mensagem)
    voz.say(mensagem)
    voz.runAndWait()

def ouvir_comando():
    reconhecedor = sr.Recognizer()
    with sr.Microphone() as mic:
        print("üé§ Ouvindo voc√™...")
        reconhecedor.adjust_for_ambient_noise(mic)
        audio = reconhecedor.listen(mic)

        try:
            comando = reconhecedor.recognize_google(audio, language='pt-BR')
            print("üîµ Voc√™:", comando)
            return comando.lower()
        except sr.UnknownValueError:
            falar("Desculpe, n√£o entendi o que voc√™ disse.")
        except sr.RequestError:
            falar("Erro ao conectar com o servi√ßo de voz.")
        return ""

def previs√£o_tempo():
    try:
        resposta = requests.get("https://wttr.in/?format=3")
        if resposta.status_code == 200:
            falar(f"Previs√£o do tempo: {resposta.text}")
        else:
            falar("N√£o consegui obter a previs√£o do tempo.")
    except:
        falar("Erro ao acessar o servi√ßo de clima.")

def contar_piada():
    piadas = [
        "Por que o computador foi ao m√©dico? Porque ele estava com um v√≠rus!",
        "Qual √© o c√∫mulo da distra√ß√£o? Tentar afogar um peixe.",
        "Por que o jacar√© tirou o filho da escola? Porque ele r√©ptil de ano!"
    ]
    import random
    falar(random.choice(piadas))

def anotar():
    falar("O que voc√™ quer anotar?")
    texto = ouvir_comando()
    if texto:
        with open("anotacoes.txt", "a", encoding="utf-8") as arquivo:
            arquivo.write(texto + "\n")
        falar("Anota√ß√£o salva com sucesso.")

def tocar_musica():
    falar("Qual m√∫sica voc√™ quer ouvir?")
    musica = ouvir_comando()
    if musica:
        url = f"https://www.youtube.com/results?search_query={musica}"
        webbrowser.open(url)
        falar(f"Buscando {musica} no YouTube.")
        time.sleep(3)
        pyautogui.press("tab")  # Navega e simula clique (opcional)
        pyautogui.press("enter")

def assistente_voz():
    falar("Ol√°! Eu sou sua assistente de voz. O que voc√™ quer fazer hoje?")

    while True:
        comando = ouvir_comando()

        if "sair" in comando or "encerrar" in comando or "tchau" in comando:
            falar("At√© logo! Foi bom falar com voc√™.")
            break
        elif "seu nome" in comando:
            falar("Eu ainda n√£o tenho um nome... Que tal voc√™ me dar um?")
        elif "que horas s√£o" in comando or "me diga as horas" in comando:
            agora = datetime.datetime.now().strftime("%H:%M")
            falar(f"Agora s√£o {agora}.")
        elif "pesquise por" in comando:
            termo = comando.replace("pesquise por", "").strip()
            url = f"https://www.google.com/search?q={termo}"
            falar(f"Pesquisando por {termo} no Google.")
            webbrowser.open(url)
        elif "abrir o youtube" in comando:
            falar("Abrindo o YouTube pra voc√™.")
            webbrowser.open("https://www.youtube.com")
        elif "como voc√™ est√°" in comando:
            falar("Estou √≥tima! Obrigada por perguntar.")
        elif "previs√£o do tempo" in comando or "tempo hoje" in comando:
            previs√£o_tempo()
        elif "conte uma piada" in comando or "me fa√ßa rir" in comando:
            contar_piada()
        elif "anotar" in comando or "criar anota√ß√£o" in comando:
            anotar()
        elif "tocar m√∫sica" in comando or "ouvir m√∫sica" in comando:
            tocar_musica()
        elif comando:
            falar("Desculpe, ainda n√£o aprendi esse comando.")

assistente_voz()
